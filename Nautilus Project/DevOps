#Create a deployment nagios-deployment for Nagios core.
#The container name must be nagios-container and it must use jasonrivers/nagios image.
#Create a user and password for the Nagios core web interface, user must be xFusionCorp and password must be LQfKeWWxWD. (you can manually perform this step after deployment)
#Create a service nagios-service for Nagios, which must be of targetPort type, nodePort must be 30008.

//SOLUTION:
- First develop a .yaml manifest file to create a nagios deployment pod and service with the provided requirements
- To run the .yaml files run the command below
kubectl apply -f filename.yaml
- After creating the deployment pod and service, you have to create user and password manually
#Run the following commands to create user and password:
- Identify the pod name in which nagios was deployed into
kubectl get all
#OR
kubectl get service nagios-service
#OR
kubectl get pod
- Switch to the pod/container CLI
kubectl exec -it <nagios-pod-name> -- /bin/bash
cd /opt/nagios/etc/
htpasswd -Bc htpasswd.users <username>
- It will prompt for new password, enter the required password.
- Exit the pod/container CLI and test the Nagios web interface on the terminal
==========================================================================================================================================================================================
#Install apache2 in "kkloud" container using apt that is running on App Server 3 in Stratos Datacenter
#Configure Apache to listen on port 5004 instead of default http port. Do not bind it to listen on specific IP or hostname only, 
(i.e it should listen on localhost, 127.0.0.1, container ip, etc)
#Make sure Apache service is up and running inside the container.
#Keep the container in running state at the end.

SOLUTION:
- First switch to pod/container CLI in the required App Server.
sudo docker exec -it kkloud /bin/bash
apt install apache2 -y
apt install nano
- Also while in pod CLI configure the apache2 service to Listen on the required port.
sudo nano /etc/apache2/ports.conf
- Look for the line that has Listen and modifiy to "Listen = 5004".
- Exit the editor and the restart service.
service apache2 restart
service apache2 status
- Exit the container/pod CLI, then check if the container is in running state.
exit
sudo docker ps
================================================================================================================================================================================

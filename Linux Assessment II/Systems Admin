# Create a bash script named ecommerce_backup.sh which should accomplish the following tasks for taking websites backup.
They have a static website running on App-Server 2 in the Datacenter.
(Also remember to place the script under /scripts directory on specified App Server)
- Create a zip archive named xfusioncorp_ecommerce.zip of /var/www/html/ecommerce directory
- Save the archive in /backup/ on App Server 2.
  This is a temporary storage, as backups from this location will be clean on weekly basis.
  Therefore, we also need to save this backup archive on the Backup Server.
- Copy the created archive to the Backup Server in /backup/ location.
- Make sure script won't ask for password while copying the archive file. Additionally, the respective server user must be able to run it.
  
  #!/bin/bash

# Create a zip archive of ecommerce directory
zip -r xfusioncorp_ecommerce.zip /var/www/html/ecommerce

# Save the archive in /backup/ on App Server 2
mv xfusioncorp_ecommerce.zip /backup/

# Copy the archive to the Backup Server
scp /backup/xfusioncorp_ecommerce.zip nautilus-backup-user@server-ip-addr:/backup/

- Save and exit the editior
NB:
# Make sure script won't ask for password while copying the archive file
# To achieve this, we need to set up passwordless SSH login between the two servers.
# Here is a summary of the steps:
# - On App Server 2, generate a new SSH key pair for the user who will run the script
#   (e.g. banner) using the command: ssh-keygen -t rsa
# - Copy the public key to the Backup Server using the command:
#   ssh-copy-id username@nautilus_backup_server_addr
# - Test the passwordless login using the command: ssh username@nautilus_backup_server_addr
#   If successful, the script won't ask for password during the "scp" command.

# To make sure the script is executable by the respective server user
  sudo chmod 755 scriptname.sh
- Then run the script.
=====================================================================================================================================
